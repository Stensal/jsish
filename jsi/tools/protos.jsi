//JSI Command Prototypes: version 2.0.0
throw("DO NOT EXECUTE: LEAVING THIS FILE OPEN IN GEANY IS USEFUL FOR CMD LINE COMPLETION + GOTO TAG");

var Array = function(cmd,args) {};
Array.prototype.concat = function() {};
Array.prototype.filter = function() {};
Array.prototype.forEach = function() {};
Array.prototype.indexOf = function() {};
Array.prototype.join = function() {};
Array.prototype.lastIndexOf = function() {};
Array.prototype.map = function() {};
Array.prototype.pop = function() {};
Array.prototype.push = function() {};
Array.prototype.reverse = function() {};
Array.prototype.shift = function() {};
Array.prototype.sizeOf = function() {};
Array.prototype.slice = function() {};
Array.prototype.some = function() {};
Array.prototype.sort = function() {};
Array.prototype.splice = function() {};
Array.prototype.unshift = function() {};
var Boolean = function(cmd,args) {};
var Cdata = function(cmd,args) {};
Cdata.prototype.get = function() {};
Cdata.prototype.info = function() {};
Cdata.prototype.names = function() {};
Cdata.prototype.schema = function() {};
Cdata.prototype.schemaMd5 = function() {};
Cdata.prototype.set = function() {};
Cdata.prototype.size = function() {};
Cdata.prototype.struct = function() {};
var Channel = function(cmd,args) {};
Channel.prototype.close = function() {};
Channel.prototype.eof = function() {};
Channel.prototype.filename = function() {};
Channel.prototype.flush = function() {};
Channel.prototype.gets = function() {};
Channel.prototype.lstat = function() {};
Channel.prototype.mode = function() {};
Channel.prototype.open = function() {};
Channel.prototype.puts = function() {};
Channel.prototype.read = function() {};
Channel.prototype.seek = function() {};
Channel.prototype.stat = function() {};
Channel.prototype.tell = function() {};
Channel.prototype.truncate = function() {};
Channel.prototype.write = function() {};
var Event = function(cmd,args) {};
Event.prototype.clearInterval = function() {};
Event.prototype.info = function() {};
Event.prototype.names = function() {};
Event.prototype.setInterval = function() {};
Event.prototype.setTimeout = function() {};
Event.prototype.update = function() {};
var File = function(cmd,args) {};
File.prototype.atime = function() {};
File.prototype.chdir = function() {};
File.prototype.chmod = function() {};
File.prototype.copy = function() {};
File.prototype.dirname = function() {};
File.prototype.executable = function() {};
File.prototype.exists = function() {};
File.prototype.extension = function() {};
File.prototype.glob = function() {};
File.prototype.isdir = function() {};
File.prototype.isfile = function() {};
File.prototype.join = function() {};
File.prototype.link = function() {};
File.prototype.lstat = function() {};
File.prototype.mkdir = function() {};
File.prototype.mtime = function() {};
File.prototype.owned = function() {};
File.prototype.pwd = function() {};
File.prototype.read = function() {};
File.prototype.readable = function() {};
File.prototype.readlink = function() {};
File.prototype.realpath = function() {};
File.prototype.remove = function() {};
File.prototype.rename = function() {};
File.prototype.rootname = function() {};
File.prototype.size = function() {};
File.prototype.stat = function() {};
File.prototype.tail = function() {};
File.prototype.tempfile = function() {};
File.prototype.truncate = function() {};
File.prototype.type = function() {};
File.prototype.writable = function() {};
File.prototype.write = function() {};
var Function = function(cmd,args) {};
Function.prototype.apply = function() {};
Function.prototype.call = function() {};
var Info = function(cmd,args) {};
Info.prototype.argv0 = function() {};
Info.prototype.cmds = function() {};
Info.prototype.completions = function() {};
Info.prototype.data = function() {};
Info.prototype.error = function() {};
Info.prototype.event = function() {};
Info.prototype.execZip = function() {};
Info.prototype.executable = function() {};
Info.prototype.funcs = function() {};
Info.prototype.interp = function() {};
Info.prototype.isMain = function() {};
Info.prototype.keywords = function() {};
Info.prototype.lookup = function() {};
Info.prototype.named = function() {};
Info.prototype.options = function() {};
Info.prototype.platform = function() {};
Info.prototype.script = function() {};
Info.prototype.scriptDir = function() {};
Info.prototype.vars = function() {};
Info.prototype.version = function() {};
var Interp = function(cmd,args) {};
Interp.prototype.alias = function() {};
Interp.prototype.call = function() {};
Interp.prototype.conf = function() {};
Interp.prototype.eval = function() {};
Interp.prototype.info = function() {};
Interp.prototype.send = function() {};
var JSON = function(cmd,args) {};
JSON.prototype.check = function() {};
JSON.prototype.parse = function() {};
JSON.prototype.parseNS = function() {};
JSON.prototype.stringify = function() {};
JSON.prototype.stringifyNS = function() {};
var Math = function(cmd,args) {};
Math.prototype.abs = function() {};
Math.prototype.acos = function() {};
Math.prototype.asin = function() {};
Math.prototype.atan = function() {};
Math.prototype.atan2 = function() {};
Math.prototype.ceil = function() {};
Math.prototype.cos = function() {};
Math.prototype.exp = function() {};
Math.prototype.floor = function() {};
Math.prototype.log = function() {};
Math.prototype.max = function() {};
Math.prototype.min = function() {};
Math.prototype.pow = function() {};
Math.prototype.random = function() {};
Math.prototype.round = function() {};
Math.prototype.sin = function() {};
Math.prototype.sqrt = function() {};
Math.prototype.tan = function() {};
var Number = function(cmd,args) {};
Number.prototype.toExponential = function() {};
Number.prototype.toFixed = function() {};
Number.prototype.toPrecision = function() {};
Number.prototype.toString = function() {};
var Object = function(cmd,args) {};
Object.prototype.bind = function() {};
Object.prototype.create = function() {};
Object.prototype.getPrototypeOf = function() {};
Object.prototype.hasOwnProperty = function() {};
Object.prototype.is = function() {};
Object.prototype.isPrototypeOf = function() {};
Object.prototype.keys = function() {};
Object.prototype.propertyIsEnumerable = function() {};
Object.prototype.setPrototypeOf = function() {};
Object.prototype.toLocaleString = function() {};
Object.prototype.toString = function() {};
Object.prototype.valueOf = function() {};
var RegExp = function(cmd,args) {};
RegExp.prototype.exec = function() {};
RegExp.prototype.test = function() {};
var Signal = function(cmd,args) {};
Signal.prototype.alarm = function() {};
Signal.prototype.callback = function() {};
Signal.prototype.default = function() {};
Signal.prototype.handle = function() {};
Signal.prototype.ignore = function() {};
Signal.prototype.kill = function() {};
Signal.prototype.names = function() {};
var Socket = function(cmd,args) {};
Socket.prototype.close = function() {};
Socket.prototype.conf = function() {};
Socket.prototype.idconf = function() {};
Socket.prototype.names = function() {};
Socket.prototype.recv = function() {};
Socket.prototype.send = function() {};
Socket.prototype.update = function() {};
var Sqlite = function(cmd,args) {};
Sqlite.prototype.authorizor = function() {};
Sqlite.prototype.backup = function() {};
Sqlite.prototype.busy = function() {};
Sqlite.prototype.changes = function() {};
Sqlite.prototype.close = function() {};
Sqlite.prototype.collate = function() {};
Sqlite.prototype.collation_needed = function() {};
Sqlite.prototype.commit_hook = function() {};
Sqlite.prototype.complete = function() {};
Sqlite.prototype.conf = function() {};
Sqlite.prototype.enable_load_extension = function() {};
Sqlite.prototype.errorcode = function() {};
Sqlite.prototype.eval = function() {};
Sqlite.prototype.exists = function() {};
Sqlite.prototype.filename = function() {};
Sqlite.prototype.func = function() {};
Sqlite.prototype.import = function() {};
Sqlite.prototype.interrupt = function() {};
Sqlite.prototype.lastInsert = function() {};
Sqlite.prototype.onecolumn = function() {};
Sqlite.prototype.profile = function() {};
Sqlite.prototype.progress = function() {};
Sqlite.prototype.query = function() {};
Sqlite.prototype.rekey = function() {};
Sqlite.prototype.restore = function() {};
Sqlite.prototype.rollback_hook = function() {};
Sqlite.prototype.timeout = function() {};
Sqlite.prototype.total_changes = function() {};
Sqlite.prototype.trace = function() {};
Sqlite.prototype.transaction = function() {};
Sqlite.prototype.unlock_notify = function() {};
Sqlite.prototype.update_hook = function() {};
Sqlite.prototype.version = function() {};
Sqlite.prototype.wal_hook = function() {};
var String = function(cmd,args) {};
String.prototype.charAt = function() {};
String.prototype.charCodeAt = function() {};
String.prototype.concat = function() {};
String.prototype.fromCharCode = function() {};
String.prototype.indexOf = function() {};
String.prototype.lastIndexOf = function() {};
String.prototype.match = function() {};
String.prototype.replace = function() {};
String.prototype.search = function() {};
String.prototype.slice = function() {};
String.prototype.split = function() {};
String.prototype.substr = function() {};
String.prototype.substring = function() {};
String.prototype.toLocaleLowerCase = function() {};
String.prototype.toLocaleUpperCase = function() {};
String.prototype.toLowerCase = function() {};
String.prototype.toTitle = function() {};
String.prototype.toUpperCase = function() {};
String.prototype.trim = function() {};
String.prototype.trimLeft = function() {};
String.prototype.trimRight = function() {};
var System = function(cmd,args) {};
System.prototype.assert = function() {};
System.prototype.b64decode = function() {};
System.prototype.b64encode = function() {};
System.prototype.clearInterval = function() {};
System.prototype.decodeURI = function() {};
System.prototype.decrypt = function() {};
System.prototype.encodeURI = function() {};
System.prototype.encrypt = function() {};
System.prototype.exec = function() {};
System.prototype.exit = function() {};
System.prototype.format = function() {};
System.prototype.getenv = function() {};
System.prototype.getpid = function() {};
System.prototype.getppid = function() {};
System.prototype.isFinite = function() {};
System.prototype.isNaN = function() {};
System.prototype.md5 = function() {};
System.prototype.noOp = function() {};
System.prototype.parseFloat = function() {};
System.prototype.parseInt = function() {};
System.prototype.puts = function() {};
System.prototype.quote = function() {};
System.prototype.setInterval = function() {};
System.prototype.setTimeout = function() {};
System.prototype.setenv = function() {};
System.prototype.sha1 = function() {};
System.prototype.sha256 = function() {};
System.prototype.sleep = function() {};
System.prototype.source = function() {};
System.prototype.strftime = function() {};
System.prototype.strptime = function() {};
System.prototype.times = function() {};
var WebSocket = function(cmd,args) {};
WebSocket.prototype.conf = function() {};
WebSocket.prototype.handler = function() {};
WebSocket.prototype.idconf = function() {};
WebSocket.prototype.ids = function() {};
WebSocket.prototype.send = function() {};
WebSocket.prototype.update = function() {};
var Zvfs = function(cmd,args) {};
Zvfs.prototype.append = function() {};
Zvfs.prototype.create = function() {};
Zvfs.prototype.list = function() {};
Zvfs.prototype.mount = function() {};
Zvfs.prototype.names = function() {};
Zvfs.prototype.offset = function() {};
Zvfs.prototype.stat = function() {};
Zvfs.prototype.truncate = function() {};
Zvfs.prototype.unmount = function() {};
var assert = function() {};
var b64decode = function() {};
var b64encode = function() {};
var clearInterval = function() {};
var console = function(cmd,args) {};
console.prototype.input = function() {};
console.prototype.log = function() {};
console.prototype.puts = function() {};
var decodeURI = function() {};
var decrypt = function() {};
var encodeURI = function() {};
var encrypt = function() {};
var exec = function() {};
var exit = function() {};
var format = function() {};
var getenv = function() {};
var getpid = function() {};
var getppid = function() {};
var isFinite = function() {};
var isNaN = function() {};
var load = function() {};
var md5 = function() {};
var noOp = function() {};
var parseFloat = function() {};
var parseInt = function() {};
var puts = function() {};
var quote = function() {};
var setInterval = function() {};
var setTimeout = function() {};
var setenv = function() {};
var sha1 = function() {};
var sha256 = function() {};
var sleep = function() {};
var source = function() {};
var strftime = function() {};
var strptime = function() {};
var times = function() {};

